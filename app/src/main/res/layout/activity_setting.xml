<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".SettingActivity">
    <androidx.appcompat.widget.Toolbar
        android:id="@+id/app_toolbar"
        android:layout_width="match_parent"
        android:layout_height="?actionBarSize"
        android:elevation="@dimen/toolbar_elevation"
        android:tag="bg_primary_color"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        app:contentInsetStart="@dimen/content_inset"
        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
        tools:ignore="UnusedAttribute" >
        <!--
        标记通常通过调用 setTag() 和 getTag() 方法来设置和获取。对于 android:tag="bg_primary_color"
        这样在 XML 中定义的标记，如果需要在代码中使用，可以通过 view.getTag() 方法获取这个标记，并根据具体的应用逻辑进行处理。
        -->

<!--        ?actionBarSize 是一个指向应用主题中的尺寸资源的引用。-->
<!--        在 Android 开发中，app:popupTheme="@style/ThemeOverlay.AppCompat.Light" 和 theme 的区别在于它们的作用对象和影响范围。-->
<!--        Theme（主题）：-->
<!--        作用对象：主题（Theme）通常指的是整个应用程序或活动的全局样式设置。它定义了应用程序中所有视图元素的外观和行为，例如文本颜色、背景色、字体大小、窗口样式等。-->
<!--        影响范围：主题影响整个应用程序或活动，它会应用于所有布局中的视图元素，除非某些视图显式地覆盖了主题中的某些属性。-->
<!--        ThemeOverlay（覆盖主题）：-->

<!--        作用对象：ThemeOverlay 是一种特殊的主题，它不是全局应用的主题，而是可以在局部范围内覆盖已定义的主题属性。-->
<!--        影响范围：ThemeOverlay 可以用于单个视图或者一组视图，以覆盖全局主题中的某些属性，例如背景色、文本颜色、边框样式等。它允许更细粒度地控制视图的外观，而不影响整体的应用程序主题。-->
<!--        具体例子解释：-->
<!--        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"：这个属性通常用于定义覆盖弹出式菜单（Popup Menu）的样式。在这个例子中，ThemeOverlay.AppCompat.Light 表示使用一个覆盖主题来控制弹出菜单的外观，例如菜单项的背景、文本颜色等。这样做的好处是，你可以让弹出菜单与应用程序的整体主题保持一致，同时在视觉和功能上进行微调。-->
<!--        主题（Theme）则是应用程序或活动的整体风格设置，例如 android:theme="@style/AppTheme"，这会影响应用中所有视图元素的默认样式，包括活动的标题栏、按钮样式、文本颜色等。-->

<!--        总结来说，主题是全局的应用样式设置，而 ThemeOverlay 则是用于在特定视图或者视图组件上局部覆盖主题属性的一种机制。-->

    </androidx.appcompat.widget.Toolbar>

    <FrameLayout
        android:id="@+id/content_frame"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

</LinearLayout>